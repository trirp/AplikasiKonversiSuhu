import javax.swing.JOptionPane;

public class KonversiSuhuFrame extends javax.swing.JFrame {

    private Object dari;
    private Object ke;


    /**
     * Creates new form KonversiSuhuFrame
     */
    public KonversiSuhuFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jLabel1 = new javax.swing.JLabel();
        comboDari = new javax.swing.JComboBox<>();
        comboKe = new javax.swing.JComboBox<>();
        txtInputSuhu = new javax.swing.JTextField();
        txtHasil = new javax.swing.JTextField();
        btnKonversi = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Konversi Suhu");

        comboDari.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        comboDari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin", "Reamur" }));

        comboKe.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        comboKe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin", "Reamur" }));

        txtInputSuhu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputSuhuActionPerformed(evt);
            }
        });
        txtInputSuhu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInputSuhuKeyTyped(evt);
            }
        });

        btnKonversi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnKonversi.setText("Konversi");
        btnKonversi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKonversiActionPerformed(evt);
            }
        });

        btnHapus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnKeluar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnKeluar))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboDari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnKonversi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHapus))
                            .addComponent(txtInputSuhu, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHasil, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboDari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInputSuhu, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKonversi)
                    .addComponent(btnHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHasil, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnKeluar)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
    txtInputSuhu.setText(""); // Mengosongkan input suhu
    txtHasil.setText("Hasil: "); // Mengosongkan hasil konversi
    comboDari.setSelectedIndex(0); // Mengatur ulang pilihan di combo box
    comboKe.setSelectedIndex(0);
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin keluar?", "Konfirmasi Keluar", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        System.exit(0); // Keluar dari aplikasi
    }
    }//GEN-LAST:event_btnKeluarActionPerformed

    
    private void btnKonversiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKonversiActionPerformed
       String dari = (String)comboDari.getSelectedItem();
       String ke = (String)comboKe.getSelectedItem();
       
//------------------------------------------------------------------------------  
       if(dari.equals("Celsius") && ke.equals("Fahrenheit"))
       {
           double c = Double.parseDouble(txtInputSuhu.getText());
           
           double f = (double)(c * 1.8 + 32);
           
           txtHasil.setText(String.valueOf(f));
       }
       else if(dari.equals("Celsius") && ke.equals("Kelvin"))
       {
           double c = Double.parseDouble(txtInputSuhu.getText());
           
           double k = (double)(c + 273.15 );
           
           txtHasil.setText(String.valueOf(k));
       }
       else if(dari.equals("Celsius") && ke.equals("Reamur"))
       {
           double c = Double.parseDouble(txtInputSuhu.getText());
           
           double k = (double)(c * 4/5 );
           
           txtHasil.setText(String.valueOf(k));
       }

       else if(dari.equals("Celsius") && ke.equals("Celsius"))
       {
           double c = Double.parseDouble(txtInputSuhu.getText());
         
           txtHasil.setText(String.valueOf(c));
       }

//------------------------------------------------------------------------------
       if(dari.equals("Fahrenheit") && ke.equals("Celsius"))
       {
           double f = Double.parseDouble(txtInputSuhu.getText());
           
           double c = (double)((f - 32)*5/9);
           
           txtHasil.setText(String.valueOf(c));
       }
       else if(dari.equals("Fahrenheit") && ke.equals("Kelvin"))
       {
           double f = Double.parseDouble(txtInputSuhu.getText());
           
           double k = (double)((f - 32)*5/9 + 273.15);
           
           txtHasil.setText(String.valueOf(k));
       }
       else if(dari.equals("Fahrenheit") && ke.equals("Reamur"))
       {
           double f = Double.parseDouble(txtInputSuhu.getText());
           
           double k = (double)(f -32)*4/9;
           
           txtHasil.setText(String.valueOf(k));
       }
       else if(dari.equals("Fahrenheit") && ke.equals("Fahrenheit"))
       {
           double f = Double.parseDouble(txtInputSuhu.getText());
         
           txtHasil.setText(String.valueOf(f));
       }
       
//------------------------------------------------------------------------------
       if(dari.equals("Kelvin") && ke.equals("Celsius"))
       {
           double k = Double.parseDouble(txtInputSuhu.getText());
           
           double c = (double)(k - 273.15);
           
           txtHasil.setText(String.valueOf(c));
       }
       else if(dari.equals("Kelvin") && ke.equals("Fahrenheit"))
       {
           double k = Double.parseDouble(txtInputSuhu.getText());
           
           double f = (double)(k - 273.15) * 9/5 +32;
           
           txtHasil.setText(String.valueOf(f));
       }
       else if(dari.equals("Kelvin") && ke.equals("Reamur"))
       {
           double k = Double.parseDouble(txtInputSuhu.getText());
           
           double f = (double)(k - 273.15) * 4/5  ; 
           
           txtHasil.setText(String.valueOf(f));
       }
       else if(dari.equals("Kelvin") && ke.equals("Kelvin"))
       {
           double k = Double.parseDouble(txtInputSuhu.getText());
         
           txtHasil.setText(String.valueOf(k));
       }

//------------------------------------------------------------------------------
       if(dari.equals("Reamur") && ke.equals("Celsius"))
       {
           double r = Double.parseDouble(txtInputSuhu.getText());
           
           double c = (double)(r * 4/5);
           
           txtHasil.setText(String.valueOf(c));
       }
       else if(dari.equals("Reamur") && ke.equals("Fahrenheit"))
       {
           double r = Double.parseDouble(txtInputSuhu.getText());
           
           double f = (double)(r * 9/4) + 32;
           
           txtHasil.setText(String.valueOf(f));
       }
       else if(dari.equals("Reamur") && ke.equals("Kelvin"))
       {
           double r = Double.parseDouble(txtInputSuhu.getText());
           
           double f = (double)(r * 5/4 + 273); 
           
           txtHasil.setText(String.valueOf(f));
       }
       else if(dari.equals("Reamur") && ke.equals("Reamur"))
       {
           double r = Double.parseDouble(txtInputSuhu.getText());
         
           txtHasil.setText(String.valueOf(r));
       } 
    }//GEN-LAST:event_btnKonversiActionPerformed
       
    private void txtInputSuhuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputSuhuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInputSuhuActionPerformed

    private void txtInputSuhuKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputSuhuKeyTyped
    char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != '.') {
            evt.consume();  // Jika bukan angka atau titik, jangan diproses
        }
    }//GEN-LAST:event_txtInputSuhuKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new KonversiSuhuFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnKonversi;
    private javax.swing.JComboBox<String> comboDari;
    private javax.swing.JComboBox<String> comboKe;
    private javax.swing.JLabel jLabel1;
    private java.awt.Panel panel1;
    private javax.swing.JTextField txtHasil;
    private javax.swing.JTextField txtInputSuhu;
    // End of variables declaration//GEN-END:variables

    private double konversiSuhu(double suhuInput, String dari, String ke) {
        return 0;
    }
}
